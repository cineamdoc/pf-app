{"ast":null,"code":"var _jsxFileName = \"/Users/cinemadoc/Documents/project/pf-app/client/src/components/CategoryListPage.jsx\",\n  _s = $RefreshSig$();\n// React 라이브러리와 훅을 불러옴\nimport React, { useState, useEffect } from 'react';\n// axios 라이브러리를 불러옴\nimport axios from 'axios';\n// useNavigate 훅을 불러옴\nimport { useNavigate } from 'react-router-dom';\n// CategoryListPage 컴포넌트의 스타일 시트를 불러옴\nimport './CategoryListPage.css';\n\n// CategoryListPage 컴포넌트를 정의\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CategoryListPage = () => {\n  _s();\n  // 요청 데이터와 카테고리 상태를 정의\n  const [requests, setRequests] = useState([]);\n  const [category, setCategory] = useState('Animation');\n  // 페이지 이동을 위한 navigate 훅을 사용\n  const navigate = useNavigate();\n\n  // 컴포넌트가 마운트될 때와 카테고리가 변경될 때 요청 데이터를 가져옴\n  useEffect(() => {\n    fetchRequests();\n  }, [category]);\n\n  // 요청 데이터를 가져오는 함수\n  const fetchRequests = async () => {\n    try {\n      // API로부터 요청 데이터를 가져옴\n      const response = await axios.get('/api/requests');\n      // 현재 선택된 카테고리에 해당하는 요청만 상태에 저장\n      setRequests(response.data.filter(req => req.category === category));\n    } catch (error) {\n      // 오류 발생 시 콘솔에 출력\n      console.error('Error fetching requests', error);\n    }\n  };\n\n  // 카테고리 버튼 클릭 시 호출되는 함수\n  const handleCategoryClick = selectedCategory => {\n    // 선택된 카테고리로 상태를 업데이트\n    setCategory(selectedCategory);\n  };\n\n  // 요청 항목 클릭 시 호출되는 함수\n  const handleRequestClick = (category, requestId) => {\n    // 해당 요청 상세 페이지로 이동\n    navigate(`/request/${requestId}?category=${category}`);\n  };\n\n  // 새 요청 버튼 클릭 시 호출되는 함수\n  const handleNewRequestClick = category => {\n    // 새 요청 작성 페이지로 이동\n    navigate(`/request/new?category=${category}`);\n  };\n  return (\n    /*#__PURE__*/\n    // 페이지 전체를 감싸는 div 요소에 category-list-page 클래스를 적용\n    _jsxDEV(\"div\", {\n      className: \"category-list-page\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Request\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Asset & LookDev\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"categories\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"category-button\",\n          onClick: () => handleCategoryClick('Animation'),\n          children: [\"Animation\", /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"request-button\",\n            onClick: e => {\n              // 부모 요소의 클릭 이벤트 전파를 중단\n              e.stopPropagation();\n              // 새 요청 작성 페이지로 이동\n              handleNewRequestClick('Animation');\n            },\n            children: \"\\uC81C\\uC791\\uC758\\uB8B0\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"category-button\",\n          onClick: () => handleCategoryClick('Movie'),\n          children: [\"Movie\", /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"request-button\",\n            onClick: e => {\n              // 부모 요소의 클릭 이벤트 전파를 중단\n              e.stopPropagation();\n              // 새 요청 작성 페이지로 이동\n              handleNewRequestClick('Movie');\n            },\n            children: \"\\uC81C\\uC791\\uC758\\uB8B0\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"category-button\",\n          onClick: () => handleCategoryClick('Game'),\n          children: [\"Game\", /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"request-button\",\n            onClick: e => {\n              // 부모 요소의 클릭 이벤트 전파를 중단\n              e.stopPropagation();\n              // 새 요청 작성 페이지로 이동\n              handleNewRequestClick('Game');\n            },\n            children: \"\\uC81C\\uC791\\uC758\\uB8B0\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"request-list\",\n        children: requests.map(request =>\n        /*#__PURE__*/\n        // 각 요청 항목을 렌더링하는 div 요소에 request-item 클래스를 적용\n        _jsxDEV(\"div\", {\n          className: \"request-item\",\n          onClick: () => handleRequestClick(request.category, request._id),\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"category-icon\",\n            children: request.category\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"request-title\",\n            children: request.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"request-author\",\n            children: request.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 25\n          }, this)]\n        }, request._id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 21\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }, this)\n  );\n};\n\n// CategoryListPage 컴포넌트를 기본 내보내기\n_s(CategoryListPage, \"YaDIDxchDIzYKB8LrgOSFYbE6uc=\", false, function () {\n  return [useNavigate];\n});\n_c = CategoryListPage;\nexport default CategoryListPage;\nvar _c;\n$RefreshReg$(_c, \"CategoryListPage\");","map":{"version":3,"names":["React","useState","useEffect","axios","useNavigate","jsxDEV","_jsxDEV","CategoryListPage","_s","requests","setRequests","category","setCategory","navigate","fetchRequests","response","get","data","filter","req","error","console","handleCategoryClick","selectedCategory","handleRequestClick","requestId","handleNewRequestClick","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","e","stopPropagation","map","request","_id","title","name","_c","$RefreshReg$"],"sources":["/Users/cinemadoc/Documents/project/pf-app/client/src/components/CategoryListPage.jsx"],"sourcesContent":["// React 라이브러리와 훅을 불러옴\nimport React, { useState, useEffect } from 'react';\n// axios 라이브러리를 불러옴\nimport axios from 'axios';\n// useNavigate 훅을 불러옴\nimport { useNavigate } from 'react-router-dom';\n// CategoryListPage 컴포넌트의 스타일 시트를 불러옴\nimport './CategoryListPage.css';\n\n// CategoryListPage 컴포넌트를 정의\nconst CategoryListPage = () => {\n    // 요청 데이터와 카테고리 상태를 정의\n    const [requests, setRequests] = useState([]);\n    const [category, setCategory] = useState('Animation');\n    // 페이지 이동을 위한 navigate 훅을 사용\n    const navigate = useNavigate();\n\n    // 컴포넌트가 마운트될 때와 카테고리가 변경될 때 요청 데이터를 가져옴\n    useEffect(() => {\n        fetchRequests();\n    }, [category]);\n\n    // 요청 데이터를 가져오는 함수\n    const fetchRequests = async () => {\n        try {\n            // API로부터 요청 데이터를 가져옴\n            const response = await axios.get('/api/requests');\n            // 현재 선택된 카테고리에 해당하는 요청만 상태에 저장\n            setRequests(response.data.filter(req => req.category === category));\n        } catch (error) {\n            // 오류 발생 시 콘솔에 출력\n            console.error('Error fetching requests', error);\n        }\n    };\n\n    // 카테고리 버튼 클릭 시 호출되는 함수\n    const handleCategoryClick = (selectedCategory) => {\n        // 선택된 카테고리로 상태를 업데이트\n        setCategory(selectedCategory);\n    };\n\n    // 요청 항목 클릭 시 호출되는 함수\n    const handleRequestClick = (category, requestId) => {\n        // 해당 요청 상세 페이지로 이동\n        navigate(`/request/${requestId}?category=${category}`);\n    };\n\n    // 새 요청 버튼 클릭 시 호출되는 함수\n    const handleNewRequestClick = (category) => {\n        // 새 요청 작성 페이지로 이동\n        navigate(`/request/new?category=${category}`);\n    };\n\n    return (\n        // 페이지 전체를 감싸는 div 요소에 category-list-page 클래스를 적용\n        <div className=\"category-list-page\">\n            {/* 페이지 제목을 나타내는 h1 요소 */}\n            <h1>Request</h1>\n            {/* 페이지 부제목을 나타내는 h2 요소 */}\n            <h2>Asset & LookDev</h2>\n            {/* 카테고리 버튼들을 포함하는 div 요소에 categories 클래스를 적용 */}\n            <div className=\"categories\">\n                {/* Animation 카테고리 버튼을 정의 */}\n                <div className=\"category-button\" onClick={() => handleCategoryClick('Animation')}>\n                    Animation\n                    {/* 새 요청 버튼을 정의 */}\n                    <button className=\"request-button\" onClick={(e) => {\n                        // 부모 요소의 클릭 이벤트 전파를 중단\n                        e.stopPropagation();\n                        // 새 요청 작성 페이지로 이동\n                        handleNewRequestClick('Animation');\n                    }}>제작의뢰</button>\n                </div>\n                {/* Movie 카테고리 버튼을 정의 */}\n                <div className=\"category-button\" onClick={() => handleCategoryClick('Movie')}>\n                    Movie\n                    {/* 새 요청 버튼을 정의 */}\n                    <button className=\"request-button\" onClick={(e) => {\n                        // 부모 요소의 클릭 이벤트 전파를 중단\n                        e.stopPropagation();\n                        // 새 요청 작성 페이지로 이동\n                        handleNewRequestClick('Movie');\n                    }}>제작의뢰</button>\n                </div>\n                {/* Game 카테고리 버튼을 정의 */}\n                <div className=\"category-button\" onClick={() => handleCategoryClick('Game')}>\n                    Game\n                    {/* 새 요청 버튼을 정의 */}\n                    <button className=\"request-button\" onClick={(e) => {\n                        // 부모 요소의 클릭 이벤트 전파를 중단\n                        e.stopPropagation();\n                        // 새 요청 작성 페이지로 이동\n                        handleNewRequestClick('Game');\n                    }}>제작의뢰</button>\n                </div>\n            </div>\n            {/* 요청 목록을 포함하는 div 요소에 request-list 클래스를 적용 */}\n            <div className=\"request-list\">\n                {/* 요청 목록을 렌더링 */}\n                {requests.map((request) => (\n                    // 각 요청 항목을 렌더링하는 div 요소에 request-item 클래스를 적용\n                    <div key={request._id} className=\"request-item\" onClick={() => handleRequestClick(request.category, request._id)}>\n                        {/* 요청 카테고리를 나타내는 span 요소 */}\n                        <span className=\"category-icon\">{request.category}</span>\n                        {/* 요청 제목을 나타내는 span 요소 */}\n                        <span className=\"request-title\">{request.title}</span>\n                        {/* 요청 작성자를 나타내는 span 요소 */}\n                        <span className=\"request-author\">{request.name}</span>\n                    </div>\n                ))}\n            </div>\n        </div>\n    );\n};\n\n// CategoryListPage 컴포넌트를 기본 내보내기\nexport default CategoryListPage;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}