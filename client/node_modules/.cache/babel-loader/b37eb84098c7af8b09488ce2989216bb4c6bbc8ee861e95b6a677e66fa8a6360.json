{"ast":null,"code":"var _jsxFileName = \"/Users/cinemadoc/Documents/project/pf-app/client/src/components/Navbar.jsx\",\n  _s = $RefreshSig$();\n// React 라이브러리와 훅을 불러옴\nimport React, { useState, useEffect } from 'react';\n// Link 컴포넌트를 불러옴\nimport { Link } from 'react-router-dom';\n// Navbar 컴포넌트의 스타일 시트를 불러옴\nimport './Navbar.css';\n\n// Navbar 컴포넌트를 정의\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Navbar = () => {\n  _s();\n  // 메뉴의 열림/닫힘 상태를 관리하는 상태 변수와 상태 업데이트 함수를 정의\n  const [menuOpen, setMenuOpen] = useState(false);\n\n  // 메뉴가 열리면 3초 후 자동으로 닫히도록 하는 효과를 설정\n  useEffect(() => {\n    let timer;\n    if (menuOpen) {\n      // 메뉴가 열리면 3초 후 메뉴를 닫음\n      timer = setTimeout(() => {\n        setMenuOpen(false);\n      }, 3000);\n    }\n    // 컴포넌트 언마운트 시 타이머를 정리\n    return () => clearTimeout(timer);\n  }, [menuOpen]);\n\n  // 메뉴 아이콘 클릭 시 메뉴의 열림/닫힘 상태를 토글하는 함수\n  const toggleMenu = () => {\n    setMenuOpen(!menuOpen);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"nav\", {\n      className: \"navbar\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"logo\",\n        children: [/*#__PURE__*/_jsxDEV(Link, {\n          to: \"/\",\n          children: \"Realkey\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 21\n        }, this), \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"menu-icon\",\n        onClick: toggleMenu,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 21\n        }, this), \" \", /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 21\n        }, this), \" \", /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 21\n        }, this), \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"menu\",\n        children: [/*#__PURE__*/_jsxDEV(Link, {\n          to: \"/about\",\n          children: \"ABOUT\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 21\n        }, this), \" \", /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/portfolio\",\n          children: \"PORTFOLIO\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 21\n        }, this), \" \", /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/request\",\n          children: \"REQUEST\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 21\n        }, this), \" \", /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/contact\",\n          children: \"CONTACT\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 21\n        }, this), \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `slide-menu ${menuOpen ? 'open' : ''}`,\n      children: [/*#__PURE__*/_jsxDEV(Link, {\n        to: \"/about\",\n        onClick: toggleMenu,\n        children: \"ABOUT\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this), \" \", /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/portfolio\",\n        onClick: toggleMenu,\n        children: \"PORTFOLIO\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this), \" \", /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/request\",\n        onClick: toggleMenu,\n        children: \"REQUEST\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this), \" \", /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/contact\",\n        onClick: toggleMenu,\n        children: \"CONTACT\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this), menuOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"overlay\",\n      onClick: toggleMenu\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 26\n    }, this)]\n  }, void 0, true);\n};\n\n// Navbar 컴포넌트를 기본 내보내기\n_s(Navbar, \"YpXa3kgiBOFhFYWp8S78i7Nbdv8=\");\n_c = Navbar;\nexport default Navbar;\nvar _c;\n$RefreshReg$(_c, \"Navbar\");","map":{"version":3,"names":["React","useState","useEffect","Link","jsxDEV","_jsxDEV","Fragment","_Fragment","Navbar","_s","menuOpen","setMenuOpen","timer","setTimeout","clearTimeout","toggleMenu","children","className","to","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["/Users/cinemadoc/Documents/project/pf-app/client/src/components/Navbar.jsx"],"sourcesContent":["// React 라이브러리와 훅을 불러옴\nimport React, { useState, useEffect } from 'react';\n// Link 컴포넌트를 불러옴\nimport { Link } from 'react-router-dom';\n// Navbar 컴포넌트의 스타일 시트를 불러옴\nimport './Navbar.css';\n\n// Navbar 컴포넌트를 정의\nconst Navbar = () => {\n    // 메뉴의 열림/닫힘 상태를 관리하는 상태 변수와 상태 업데이트 함수를 정의\n    const [menuOpen, setMenuOpen] = useState(false);\n\n    // 메뉴가 열리면 3초 후 자동으로 닫히도록 하는 효과를 설정\n    useEffect(() => {\n        let timer;\n        if (menuOpen) {\n            // 메뉴가 열리면 3초 후 메뉴를 닫음\n            timer = setTimeout(() => {\n                setMenuOpen(false);\n            }, 3000);\n        }\n        // 컴포넌트 언마운트 시 타이머를 정리\n        return () => clearTimeout(timer);\n    }, [menuOpen]);\n\n    // 메뉴 아이콘 클릭 시 메뉴의 열림/닫힘 상태를 토글하는 함수\n    const toggleMenu = () => {\n        setMenuOpen(!menuOpen);\n    };\n\n    return (\n        <>\n            {/* 네비게이션 바를 정의하는 nav 요소에 navbar 클래스를 적용 */}\n            <nav className=\"navbar\">\n                {/* 로고를 포함하는 div 요소에 logo 클래스를 적용 */}\n                <div className=\"logo\">\n                    <Link to=\"/\">Realkey</Link> {/* 홈으로 이동하는 링크 */}\n                </div>\n                {/* 메뉴 아이콘을 포함하는 div 요소에 menu-icon 클래스를 적용, 클릭 시 메뉴 토글 */}\n                <div className=\"menu-icon\" onClick={toggleMenu}>\n                    <div className=\"bar\"></div> {/* 메뉴 아이콘 바 */}\n                    <div className=\"bar\"></div> {/* 메뉴 아이콘 바 */}\n                    <div className=\"bar\"></div> {/* 메뉴 아이콘 바 */}\n                </div>\n                {/* 네비게이션 메뉴를 포함하는 div 요소에 menu 클래스를 적용 */}\n                <div className=\"menu\">\n                    <Link to=\"/about\">ABOUT</Link> {/* ABOUT 페이지로 이동하는 링크 */}\n                    <Link to=\"/portfolio\">PORTFOLIO</Link> {/* PORTFOLIO 페이지로 이동하는 링크 */}\n                    <Link to=\"/request\">REQUEST</Link> {/* REQUEST 페이지로 이동하는 링크 */}\n                    <Link to=\"/contact\">CONTACT</Link> {/* CONTACT 페이지로 이동하는 링크 */}\n                </div>\n            </nav>\n            {/* 슬라이드 메뉴를 정의하는 div 요소에 slide-menu 클래스를 적용, 메뉴 열림 상태에 따라 클래스 추가 */}\n            <div className={`slide-menu ${menuOpen ? 'open' : ''}`}>\n                <Link to=\"/about\" onClick={toggleMenu}>ABOUT</Link> {/* ABOUT 페이지로 이동하는 링크 */}\n                <Link to=\"/portfolio\" onClick={toggleMenu}>PORTFOLIO</Link> {/* PORTFOLIO 페이지로 이동하는 링크 */}\n                <Link to=\"/request\" onClick={toggleMenu}>REQUEST</Link> {/* REQUEST 페이지로 이동하는 링크 */}\n                <Link to=\"/contact\" onClick={toggleMenu}>CONTACT</Link> {/* CONTACT 페이지로 이동하는 링크 */}\n            </div>\n            {/* 메뉴가 열렸을 때 화면을 어둡게 하는 오버레이, 클릭 시 메뉴 토글 */}\n            {menuOpen && <div className=\"overlay\" onClick={toggleMenu}></div>}\n        </>\n    );\n};\n\n// Navbar 컴포넌트를 기본 내보내기\nexport default Navbar;\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD;AACA,SAASC,IAAI,QAAQ,kBAAkB;AACvC;AACA,OAAO,cAAc;;AAErB;AAAA,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AACA,MAAMC,MAAM,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACjB;EACA,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGV,QAAQ,CAAC,KAAK,CAAC;;EAE/C;EACAC,SAAS,CAAC,MAAM;IACZ,IAAIU,KAAK;IACT,IAAIF,QAAQ,EAAE;MACV;MACAE,KAAK,GAAGC,UAAU,CAAC,MAAM;QACrBF,WAAW,CAAC,KAAK,CAAC;MACtB,CAAC,EAAE,IAAI,CAAC;IACZ;IACA;IACA,OAAO,MAAMG,YAAY,CAACF,KAAK,CAAC;EACpC,CAAC,EAAE,CAACF,QAAQ,CAAC,CAAC;;EAEd;EACA,MAAMK,UAAU,GAAGA,CAAA,KAAM;IACrBJ,WAAW,CAAC,CAACD,QAAQ,CAAC;EAC1B,CAAC;EAED,oBACIL,OAAA,CAAAE,SAAA;IAAAS,QAAA,gBAEIX,OAAA;MAAKY,SAAS,EAAC,QAAQ;MAAAD,QAAA,gBAEnBX,OAAA;QAAKY,SAAS,EAAC,MAAM;QAAAD,QAAA,gBACjBX,OAAA,CAACF,IAAI;UAACe,EAAE,EAAC,GAAG;UAAAF,QAAA,EAAC;QAAO;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC,KAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC3B,CAAC,eAENjB,OAAA;QAAKY,SAAS,EAAC,WAAW;QAACM,OAAO,EAAER,UAAW;QAAAC,QAAA,gBAC3CX,OAAA;UAAKY,SAAS,EAAC;QAAK;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC,KAAC,eAC5BjB,OAAA;UAAKY,SAAS,EAAC;QAAK;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC,KAAC,eAC5BjB,OAAA;UAAKY,SAAS,EAAC;QAAK;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC,KAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC3B,CAAC,eAENjB,OAAA;QAAKY,SAAS,EAAC,MAAM;QAAAD,QAAA,gBACjBX,OAAA,CAACF,IAAI;UAACe,EAAE,EAAC,QAAQ;UAAAF,QAAA,EAAC;QAAK;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC,KAAC,eAC/BjB,OAAA,CAACF,IAAI;UAACe,EAAE,EAAC,YAAY;UAAAF,QAAA,EAAC;QAAS;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC,KAAC,eACvCjB,OAAA,CAACF,IAAI;UAACe,EAAE,EAAC,UAAU;UAAAF,QAAA,EAAC;QAAO;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC,KAAC,eACnCjB,OAAA,CAACF,IAAI;UAACe,EAAE,EAAC,UAAU;UAAAF,QAAA,EAAC;QAAO;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC,KAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAClC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL,CAAC,eAENjB,OAAA;MAAKY,SAAS,EAAE,cAAcP,QAAQ,GAAG,MAAM,GAAG,EAAE,EAAG;MAAAM,QAAA,gBACnDX,OAAA,CAACF,IAAI;QAACe,EAAE,EAAC,QAAQ;QAACK,OAAO,EAAER,UAAW;QAAAC,QAAA,EAAC;MAAK;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC,KAAC,eACpDjB,OAAA,CAACF,IAAI;QAACe,EAAE,EAAC,YAAY;QAACK,OAAO,EAAER,UAAW;QAAAC,QAAA,EAAC;MAAS;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC,KAAC,eAC5DjB,OAAA,CAACF,IAAI;QAACe,EAAE,EAAC,UAAU;QAACK,OAAO,EAAER,UAAW;QAAAC,QAAA,EAAC;MAAO;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC,KAAC,eACxDjB,OAAA,CAACF,IAAI;QAACe,EAAE,EAAC,UAAU;QAACK,OAAO,EAAER,UAAW;QAAAC,QAAA,EAAC;MAAO;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC,KAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACvD,CAAC,EAELZ,QAAQ,iBAAIL,OAAA;MAAKY,SAAS,EAAC,SAAS;MAACM,OAAO,EAAER;IAAW;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC;EAAA,eACnE,CAAC;AAEX,CAAC;;AAED;AAAAb,EAAA,CAzDMD,MAAM;AAAAgB,EAAA,GAANhB,MAAM;AA0DZ,eAAeA,MAAM;AAAC,IAAAgB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}